buildscript {
    //region Dependencies
    ext.versions = [
            dagger: '2.29.1',
            kotlin: '1.4.10',
            rxPreferences: '2.0.0',
            skylight: '0.12.0',
            skylightBrand: '0.14.0-SNAPSHOT',
    ]
    ext.deps = [
            appCompat: 'androidx.appcompat:appcompat:1.2.0',
            constraintLayout: 'androidx.constraintlayout:constraintlayout:2.0.1',
            coreKtx: 'androidx.core:core-ktx:1.3.2',
            coreLibraryDesugaring: 'com.android.tools:desugar_jdk_libs:1.0.10',
            dagger: "com.google.dagger:dagger:$versions.dagger",
            daggerCompiler: "com.google.dagger:dagger-compiler:$versions.dagger",
            espresso: 'androidx.test.espresso:espresso-intents:3.3.0',
            inlineDimens: 'dev.drewhamilton.inlinedimens:inlinedimens:0.6.2',
            junit: 'junit:junit:4.13',
            junitExt: 'androidx.test.ext:junit:1.1.2',
            kotlinStdLib: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
            lifecycle: 'androidx.lifecycle:lifecycle-common-java8:2.2.0',
            lifecycleRuntime: 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0',
            materialComponents: 'com.google.android.material:material:1.2.1',
            mockito: 'org.mockito:mockito-inline:3.5.13',
            mockitoKotlin: 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0',
            multidex: 'androidx.multidex:multidex:2.0.1',
            okHttp: 'com.squareup.okhttp3:okhttp:4.9.0',
            rxAndroid: 'io.reactivex.rxjava2:rxandroid:2.1.1',
            rxPreferences: "drewhamilton.rxpreferences:rxpreferences:$versions.rxPreferences",
            rxPreferencesKtx: "drewhamilton.rxpreferences:rxpreferences-ktx:$versions.rxPreferences",
            rxPreferencesDagger: "drewhamilton.rxpreferences:rxpreferences-dagger:$versions.rxPreferences",
            skylight: "dev.drewhamilton.skylight:skylight:$versions.skylight",
            skylightBrand: "dev.drewhamilton.skylight.android.brand:skylight-brand-xml-theme:$versions.skylightBrand",
            skylightCalculator: "dev.drewhamilton.skylight:skylight-calculator:$versions.skylight",
            skylightFake: "dev.drewhamilton.skylight:skylight-fake:$versions.skylight",
            skylightSunriseSunsetOrg: "dev.drewhamilton.skylight:skylight-sunrise-sunset-org:$versions.skylight",
            testRules: 'androidx.test:rules:1.3.0',
            testRunner: 'androidx.test:runner:1.3.0',
    ]
    //endregion

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18"
        classpath 'org.jetbrains.kotlinx:binary-compatibility-validator:0.2.3'
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        jcenter()
    }
}

ext.projectVersions = [
        minSdk: 21,
        targetSdk: 28,
]

apply plugin: 'binary-compatibility-validator'
apiValidation {
    ignoredProjects += ['test', 'demo']
}

ext {
    keystore = project.hasProperty('personalKeystore') ? personalKeystore : 'x'
    keystorePassword = project.hasProperty('personalKeystorePassword') ? personalKeystorePassword : 'x'
    keyAlias = project.hasProperty('personalKeyAlias') ? personalKeyAlias : 'x'
    keyPassword = project.hasProperty('personalKeyPassword') ? personalKeyPassword : 'x'
}

allprojects { project ->
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    project.configurations.all {
        // Don't cache snapshots:
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    project.plugins.withType(com.android.build.gradle.LibraryPlugin) {
        project.android.libraryVariants.all { variant ->
            // TODO WORKAROUND: replace with https://issuetracker.google.com/issues/72050365 once released.
            variant.generateBuildConfigProvider.get().enabled = false
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

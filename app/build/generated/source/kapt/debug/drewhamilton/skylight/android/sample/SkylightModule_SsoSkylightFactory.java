// Generated by Dagger (https://google.github.io/dagger).
package drewhamilton.skylight.android.sample;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import drewhamilton.skylight.backport.sso.SsoSkylight;
import drewhamilton.skylight.backport.sso.dagger.SsoSkylightComponent;
import javax.inject.Provider;

public final class SkylightModule_SsoSkylightFactory implements Factory<SsoSkylight> {
  private final Provider<SsoSkylightComponent> ssoSkylightComponentProvider;

  public SkylightModule_SsoSkylightFactory(
      Provider<SsoSkylightComponent> ssoSkylightComponentProvider) {
    this.ssoSkylightComponentProvider = ssoSkylightComponentProvider;
  }

  @Override
  public SsoSkylight get() {
    return ssoSkylight(ssoSkylightComponentProvider.get());
  }

  public static SkylightModule_SsoSkylightFactory create(
      Provider<SsoSkylightComponent> ssoSkylightComponentProvider) {
    return new SkylightModule_SsoSkylightFactory(ssoSkylightComponentProvider);
  }

  public static SsoSkylight ssoSkylight(SsoSkylightComponent ssoSkylightComponent) {
    return Preconditions.checkNotNull(
        SkylightModule.ssoSkylight(ssoSkylightComponent),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
